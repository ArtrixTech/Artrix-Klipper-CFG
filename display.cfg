[gcode_macro M73]
rename_existing: M73.1
variable_p: 0.0
variable_r: 0.0
gcode:
   {% set P = params.P|default(0)|int %}
   {% set R = params.R|default(0)|int %}
   M73.1 P{P}
   SET_GCODE_VARIABLE MACRO=M73 VARIABLE=p VALUE={P}
   SET_GCODE_VARIABLE MACRO=M73 VARIABLE=r VALUE={R}


[display_template _printing_time]
text:
   {% set ptime = printer["gcode_macro M73"].r %}
   { "%02d:%02d" % (ptime // 60, ptime % 60) }

[display_data _default_16x4 extruder]
position: 0, 0
text:
  {% set active_extruder = printer.toolhead.extruder %}
  { render("_heater_temperature", param_heater_name=active_extruder) }

[display_data _default_16x4 fan]
position: 0, 10
text: { render("_fan_speed") }

[display_data _default_16x4 heater_bed]
position: 1, 0
text: { render("_heater_temperature", param_heater_name="heater_bed") }

[display_data _default_16x4 speed_factor]
position: 1, 10
text:
  ~feedrate~
  { "{:>4.0%}".format(printer.gcode_move.speed_factor) }

[display_data _default_16x4 print_progress]
position: 2, 0
text: { "{:^10.0%}".format(printer.display_status.progress) }
[display_data _default_16x4 progress_bar]
position: 2, 1 # Draw graphical progress bar after text is written
text: { draw_progress_bar(2, 0, 10, printer.display_status.progress) }

[display_data _default_16x4 printing_time]
position: 2, 10
text: { "%6s" % (render("_printing_time").strip(),) }

[display_data _default_16x4 print_status]
position: 3, 0
text: { render("_print_status") }
